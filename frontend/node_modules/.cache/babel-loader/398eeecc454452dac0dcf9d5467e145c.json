{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState: {\n    userInfo: localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null,\n    errorUser: '',\n    errorRequest: '',\n    errorUpdate: '',\n    loadUpdate: false,\n    post: localStorage.getItem(\"post\") ? JSON.parse(localStorage.getItem(\"post\")) : null,\n    load: false,\n    error: '',\n    posts: localStorage.getItem(\"posts\") ? JSON.parse(localStorage.getItem(\"posts\")) : null,\n    blog: localStorage.getItem(\"blog\") ? JSON.parse(localStorage.getItem(\"blog\")) : null,\n    loadB: false,\n    errorB: '',\n    editErr: '',\n    editLoad: false\n  },\n  reducers: {\n    login: (state, action) => {\n      localStorage.setItem('userInfo', JSON.stringify(action.payload.userInfo));\n      return { ...state,\n        userInfo: action.payload.userInfo\n      };\n    },\n    postBlog: (state, action) => {\n      localStorage.setItem('post', JSON.stringify(action.payload.post));\n      return { ...state,\n        post: action.payload.post\n      };\n    },\n    getPosts: (state, action) => {\n      localStorage.setItem('posts', JSON.stringify(action.payload.posts));\n      return { ...state,\n        posts: action.payload.posts\n      };\n    },\n    errorSignin: (state, action) => ({ ...state,\n      errorUser: action.payload.errorUser\n    }),\n    registerError: (state, action) => ({ ...state,\n      errorRequest: action.payload.errorRequest\n    }),\n    updateLoad: (state, action) => ({ ...state,\n      loadUpdate: action.payload.loadUpdate\n    }),\n    updateErr: (state, action) => ({ ...state,\n      errorUpdate: action.payload.errorUpdate\n    }),\n    loadPost: (state, action) => ({ ...state,\n      load: action.payload.load\n    }),\n    errorPost: (state, action) => ({ ...state,\n      error: action.payload.error\n    }),\n    getBlog: (state, action) => {\n      localStorage.setItem('blog', JSON.stringify(action.payload.blog));\n      return { ...state,\n        blog: action.payload.blog\n      };\n    },\n    loadBlog: (state, action) => ({ ...state,\n      loadB: action.payload.loadB\n    }),\n    errorBlog: (state, action) => ({ ...state,\n      errorB: action.payload.errorB\n    }),\n    editE: (state, action) => ({ ...state,\n      editErr: action.payload.editErr\n    }),\n    editL: (state, action) => ({ ...state,\n      editLoad: action.payload.editLoad\n    })\n  }\n});\nexport const {\n  login,\n  errorSignin,\n  registerError,\n  updateLoad,\n  updateErr,\n  errorPost,\n  loadPost,\n  getBlog,\n  errorBlog,\n  loadBlog,\n  postBlog,\n  getPosts,\n  editE,\n  editL\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"sources":["E:/blog/frontend/src/utils/store.js"],"names":["createSlice","blogSlice","name","initialState","userInfo","localStorage","getItem","JSON","parse","errorUser","errorRequest","errorUpdate","loadUpdate","post","load","error","posts","blog","loadB","errorB","editErr","editLoad","reducers","login","state","action","setItem","stringify","payload","postBlog","getPosts","errorSignin","registerError","updateLoad","updateErr","loadPost","errorPost","getBlog","loadBlog","errorBlog","editE","editL","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACjBC,IAAAA,QAAQ,EAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IADtE;AAEjBG,IAAAA,SAAS,EAAC,EAFO;AAGjBC,IAAAA,YAAY,EAAC,EAHI;AAIjBC,IAAAA,WAAW,EAAC,EAJK;AAKjBC,IAAAA,UAAU,EAAC,KALM;AAMjBC,IAAAA,IAAI,EAACR,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA6BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA7B,GAAsE,IAN1D;AAOjBQ,IAAAA,IAAI,EAAC,KAPY;AAQjBC,IAAAA,KAAK,EAAC,EARW;AASjBC,IAAAA,KAAK,EAACX,YAAY,CAACC,OAAb,CAAqB,OAArB,IAA8BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAA9B,GAAwE,IAT7D;AAUjBW,IAAAA,IAAI,EAACZ,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA6BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA7B,GAAsE,IAV1D;AAWjBY,IAAAA,KAAK,EAAC,KAXW;AAYjBC,IAAAA,MAAM,EAAC,EAZU;AAajBC,IAAAA,OAAO,EAAC,EAbS;AAcjBC,IAAAA,QAAQ,EAAC;AAdQ,GAFa;AAkB1BC,EAAAA,QAAQ,EAAC;AACTC,IAAAA,KAAK,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACnBpB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,UAArB,EAAgCnB,IAAI,CAACoB,SAAL,CAAeF,MAAM,CAACG,OAAP,CAAexB,QAA9B,CAAhC;AACA,aAAO,EAAC,GAAGoB,KAAJ;AAAUpB,QAAAA,QAAQ,EAACqB,MAAM,CAACG,OAAP,CAAexB;AAAlC,OAAP;AACH,KAJQ;AAKTyB,IAAAA,QAAQ,EAAC,CAACL,KAAD,EAAOC,MAAP,KAAiB;AACtBpB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,MAArB,EAA4BnB,IAAI,CAACoB,SAAL,CAAeF,MAAM,CAACG,OAAP,CAAef,IAA9B,CAA5B;AACA,aAAO,EAAC,GAAGW,KAAJ;AAAUX,QAAAA,IAAI,EAACY,MAAM,CAACG,OAAP,CAAef;AAA9B,OAAP;AACH,KARQ;AASTiB,IAAAA,QAAQ,EAAC,CAACN,KAAD,EAAOC,MAAP,KAAiB;AACtBpB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,OAArB,EAA6BnB,IAAI,CAACoB,SAAL,CAAeF,MAAM,CAACG,OAAP,CAAeZ,KAA9B,CAA7B;AACA,aAAO,EAAC,GAAGQ,KAAJ;AAAUR,QAAAA,KAAK,EAACS,MAAM,CAACG,OAAP,CAAeZ;AAA/B,OAAP;AACH,KAZQ;AAaTe,IAAAA,WAAW,EAAC,CAACP,KAAD,EAAOC,MAAP,MAAiB,EAAC,GAAGD,KAAJ;AAAUf,MAAAA,SAAS,EAACgB,MAAM,CAACG,OAAP,CAAenB;AAAnC,KAAjB,CAbH;AAcTuB,IAAAA,aAAa,EAAC,CAACR,KAAD,EAAOC,MAAP,MAAiB,EAAC,GAAGD,KAAJ;AAAUd,MAAAA,YAAY,EAACe,MAAM,CAACG,OAAP,CAAelB;AAAtC,KAAjB,CAdL;AAeVuB,IAAAA,UAAU,EAAC,CAACT,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUZ,MAAAA,UAAU,EAACa,MAAM,CAACG,OAAP,CAAehB;AAApC,KAAlB,CAfD;AAgBbsB,IAAAA,SAAS,EAAC,CAACV,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUb,MAAAA,WAAW,EAACc,MAAM,CAACG,OAAP,CAAejB;AAArC,KAAlB,CAhBG;AAiBbwB,IAAAA,QAAQ,EAAC,CAACX,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUV,MAAAA,IAAI,EAACW,MAAM,CAACG,OAAP,CAAed;AAA9B,KAAlB,CAjBI;AAkBbsB,IAAAA,SAAS,EAAC,CAACZ,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUT,MAAAA,KAAK,EAACU,MAAM,CAACG,OAAP,CAAeb;AAA/B,KAAlB,CAlBG;AAmBbsB,IAAAA,OAAO,EAAC,CAACb,KAAD,EAAOC,MAAP,KAAiB;AACrBpB,MAAAA,YAAY,CAACqB,OAAb,CAAqB,MAArB,EAA4BnB,IAAI,CAACoB,SAAL,CAAeF,MAAM,CAACG,OAAP,CAAeX,IAA9B,CAA5B;AACA,aAAO,EAAC,GAAGO,KAAJ;AAAUP,QAAAA,IAAI,EAACQ,MAAM,CAACG,OAAP,CAAeX;AAA9B,OAAP;AACH,KAtBY;AAuBbqB,IAAAA,QAAQ,EAAC,CAACd,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUN,MAAAA,KAAK,EAACO,MAAM,CAACG,OAAP,CAAeV;AAA/B,KAAlB,CAvBI;AAwBbqB,IAAAA,SAAS,EAAC,CAACf,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUL,MAAAA,MAAM,EAACM,MAAM,CAACG,OAAP,CAAeT;AAAhC,KAAlB,CAxBG;AAyBbqB,IAAAA,KAAK,EAAC,CAAChB,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUJ,MAAAA,OAAO,EAACK,MAAM,CAACG,OAAP,CAAeR;AAAjC,KAAlB,CAzBO;AA0BbqB,IAAAA,KAAK,EAAC,CAACjB,KAAD,EAAOC,MAAP,MAAkB,EAAC,GAAGD,KAAJ;AAAUH,MAAAA,QAAQ,EAACI,MAAM,CAACG,OAAP,CAAeP;AAAlC,KAAlB;AA1BO;AAlBiB,CAAD,CAA7B;AAgDA,OAAO,MAAM;AAACE,EAAAA,KAAD;AAAOQ,EAAAA,WAAP;AAAmBC,EAAAA,aAAnB;AAAiCC,EAAAA,UAAjC;AACTC,EAAAA,SADS;AACCE,EAAAA,SADD;AACWD,EAAAA,QADX;AACoBE,EAAAA,OADpB;AAC4BE,EAAAA,SAD5B;AACsCD,EAAAA,QADtC;AAETT,EAAAA,QAFS;AAEAC,EAAAA,QAFA;AAESU,EAAAA,KAFT;AAEeC,EAAAA;AAFf,IAEwBxC,SAAS,CAACyC,OAFxC;AAGP,eAAezC,SAAS,CAAC0C,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\nconst blogSlice = createSlice({\r\n    name:'blog',\r\n    initialState:{\r\nuserInfo:localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null,\r\nerrorUser:'',\r\nerrorRequest:'',\r\nerrorUpdate:'',\r\nloadUpdate:false,\r\npost:localStorage.getItem(\"post\")?JSON.parse(localStorage.getItem(\"post\")):null,\r\nload:false,\r\nerror:'',\r\nposts:localStorage.getItem(\"posts\")?JSON.parse(localStorage.getItem(\"posts\")):null,\r\nblog:localStorage.getItem(\"blog\")?JSON.parse(localStorage.getItem(\"blog\")):null,\r\nloadB:false,\r\nerrorB:'',\r\neditErr:'',\r\neditLoad:false\r\n    },\r\n    reducers:{\r\n    login:(state,action) =>{\r\n        localStorage.setItem('userInfo',JSON.stringify(action.payload.userInfo))\r\n        return {...state,userInfo:action.payload.userInfo}\r\n    },\r\n    postBlog:(state,action) =>{\r\n        localStorage.setItem('post',JSON.stringify(action.payload.post))\r\n        return {...state,post:action.payload.post}\r\n    },\r\n    getPosts:(state,action) =>{\r\n        localStorage.setItem('posts',JSON.stringify(action.payload.posts))\r\n        return {...state,posts:action.payload.posts}\r\n    },\r\n    errorSignin:(state,action)=>({...state,errorUser:action.payload.errorUser}),\r\n    registerError:(state,action)=>({...state,errorRequest:action.payload.errorRequest}),\r\n   updateLoad:(state,action) =>({...state,loadUpdate:action.payload.loadUpdate}),\r\nupdateErr:(state,action) =>({...state,errorUpdate:action.payload.errorUpdate}),\r\nloadPost:(state,action) =>({...state,load:action.payload.load}),\r\nerrorPost:(state,action) =>({...state,error:action.payload.error}),\r\ngetBlog:(state,action) =>{\r\n    localStorage.setItem('blog',JSON.stringify(action.payload.blog))\r\n    return {...state,blog:action.payload.blog}\r\n},\r\nloadBlog:(state,action) =>({...state,loadB:action.payload.loadB}),\r\nerrorBlog:(state,action) =>({...state,errorB:action.payload.errorB}),\r\neditE:(state,action) =>({...state,editErr:action.payload.editErr}),\r\neditL:(state,action) =>({...state,editLoad:action.payload.editLoad}),\r\n\r\n    }\r\n})\r\nexport const {login,errorSignin,registerError,updateLoad,\r\n    updateErr,errorPost,loadPost,getBlog,errorBlog,loadBlog,\r\n    postBlog,getPosts,editE,editL} = blogSlice.actions\r\nexport default blogSlice.reducer"]},"metadata":{},"sourceType":"module"}