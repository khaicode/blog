{"ast":null,"code":"import axios from \"axios\";\nimport { errorPost, loadPost, postBlog, getPosts, getBlog, errorBlog, loadBlog, editE, editL, search, searchL, searchErr } from \"../../utils/store\";\nexport const post = (_ref, userInfo) => {\n  let {\n    username,\n    title,\n    description,\n    photo\n  } = _ref;\n  return async dispatch => {\n    const {\n      data\n    } = await axios.post(\"/api/post\", {\n      username,\n      title,\n      description,\n      photo\n    }, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch(postBlog({\n      post: data\n    }));\n  };\n};\nexport const fetchPosts = _ref2 => {\n  let {\n    search\n  } = _ref2;\n  return async dispatch => {\n    dispatch(loadPost({\n      load: true\n    }));\n\n    try {\n      const {\n        data\n      } = await axios.get(`/api/post/${search}`);\n      dispatch(getPosts({\n        posts: data.posts\n      }));\n      dispatch(loadPost({\n        load: false\n      }));\n    } catch (error) {\n      dispatch(loadPost({\n        load: false\n      }));\n      dispatch(errorPost({\n        error: error.response && error.response.data.message ? error.response.data.message : error.message\n      }));\n    }\n  };\n};\nexport const fetchBlog = id => async dispatch => {\n  dispatch(loadBlog({\n    loadB: true\n  }));\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/post/${id}`);\n    dispatch(getBlog({\n      blog: data.post\n    }));\n    dispatch(loadBlog({\n      loadB: false\n    }));\n  } catch (error) {\n    dispatch(loadBlog({\n      loadB: false\n    }));\n    dispatch(errorBlog({\n      errorB: error.response && error.response.data.message ? error.response.data.message : error.message\n    }));\n  }\n};\nexport const editPost = (_ref3, id, userInfo) => {\n  let {\n    username,\n    title,\n    description,\n    photo,\n    categories\n  } = _ref3;\n  return async dispatch => {\n    dispatch(editL({\n      editLoad: true\n    }));\n\n    try {\n      const {\n        data\n      } = await axios.put(`/api/post/${id}`, {\n        username,\n        title,\n        description,\n        photo,\n        categories\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch(editL({\n        editLoad: false\n      }));\n      dispatch(getBlog({\n        blog: data\n      }));\n    } catch (error) {\n      dispatch(editL({\n        editLoad: false\n      }));\n      dispatch(editE({\n        editErr: error.response && error.response.data.message ? error.response.data.message : error.message\n      }));\n    }\n  };\n};\nexport const deletePost = (_ref4, userInfo) => {\n  let {\n    id\n  } = _ref4;\n  return async dispatch => {\n    await axios.delete(`/api/post/${id}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n  };\n};\nexport const listPosts = _ref5 => {\n  let {\n    title = \"\",\n    description = \"\",\n    category = \"\",\n    user = \"\"\n  } = _ref5;\n  return async dispatch => {\n    dispatch(searchL({\n      resultLoad: true\n    }));\n\n    try {\n      const {\n        data\n      } = await axios.get(`/search?title=${title}&description=${description}&category=${category}&user=${user}`);\n      dispatch(search({\n        result: data\n      }));\n      dispatch(searchL({\n        resultLoad: false\n      }));\n    } catch (error) {\n      dispatch(searchL({\n        resultLoad: false\n      }));\n      dispatch(searchErr({\n        resultErr: error.response && error.response.data.message ? error.response.data.message : error.message\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["E:/blog/frontend/src/pages/actions/postactions.js"],"names":["axios","errorPost","loadPost","postBlog","getPosts","getBlog","errorBlog","loadBlog","editE","editL","search","searchL","searchErr","post","userInfo","username","title","description","photo","dispatch","data","headers","Authorization","token","fetchPosts","load","get","posts","error","response","message","fetchBlog","id","loadB","blog","errorB","editPost","categories","editLoad","put","editErr","deletePost","delete","listPosts","category","user","resultLoad","result","resultErr"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport {errorPost,loadPost,postBlog,getPosts,getBlog,errorBlog,loadBlog,editE,editL,search,searchL,searchErr} from \"../../utils/store\"\r\nexport const post = ({username,title,description,photo},userInfo) =>async(dispatch) =>{\r\n\r\n    const {data} = await axios.post(\"/api/post\",{username,title,description,photo},{\r\n        headers:{\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    })\r\n    dispatch(postBlog({post:data}))\r\n\r\n}\r\nexport const fetchPosts = ({search}) =>async(dispatch) =>{\r\n    dispatch(loadPost({load:true}))\r\n    try{\r\n        const {data} = await axios.get(`/api/post/${search}`)\r\n        dispatch(getPosts({posts:data.posts}))\r\n        dispatch(loadPost({load:false}))\r\n    \r\n    }\r\n    catch(error){\r\n        dispatch(loadPost({load:false}))\r\n    dispatch(errorPost({error:error.response && error.response.data.message?error.response.data.message:error.message}))\r\n    }\r\n    }\r\n    export const fetchBlog = (id) =>async(dispatch) =>{\r\n        dispatch(loadBlog({loadB:true}))\r\n    try{\r\n        const {data} = await axios.get(`/api/post/${id}`)\r\n        dispatch(getBlog({blog:data.post}))\r\n        dispatch(loadBlog({loadB:false}))\r\n    \r\n    }\r\n    catch(error){\r\n        dispatch(loadBlog({loadB:false}))\r\n    dispatch(errorBlog({errorB:error.response && error.response.data.message?error.response.data.message:error.message}))\r\n    } \r\n    }\r\n    export const editPost = ({username,title,description,photo,categories},id,userInfo) =>async(dispatch)=>{\r\n        dispatch(editL({editLoad:true}))\r\n        try{\r\nconst {data} = await axios.put(`/api/post/${id}`,{username,title,description,photo,categories},{\r\n    headers:{\r\n        Authorization:`Bearer ${userInfo.token}`\r\n    }\r\n})\r\ndispatch(editL({editLoad:false}))\r\ndispatch(getBlog({blog:data}))\r\n        }\r\n        catch(error){\r\n            dispatch(editL({editLoad:false}))\r\n            dispatch(editE({editErr:error.response && error.response.data.message?error.response.data.message:error.message}))\r\n\r\n        }\r\n    }\r\n    export const deletePost = ({id},userInfo) =>async(dispatch)=>{\r\nawait axios.delete(`/api/post/${id}`,{\r\n    headers:{\r\n        Authorization:`Bearer ${userInfo.token}`\r\n    }\r\n})\r\n    }\r\n    export const listPosts = ({title = \"\",description = \"\",category = \"\",user = \"\"}) =>async(dispatch) =>{\r\n        dispatch(searchL({resultLoad:true}))\r\n        try{\r\n    const {data} = await axios.get(`/search?title=${title}&description=${description}&category=${category}&user=${user}`)\r\n    dispatch(search({result:data}))\r\n    dispatch(searchL({resultLoad:false}))\r\n\r\n        }\r\n        catch(error){\r\n            dispatch(searchL({resultLoad:false}))\r\n            dispatch(searchErr({resultErr:error.response && error.response.data.message?error.response.data.message:error.message}))\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}