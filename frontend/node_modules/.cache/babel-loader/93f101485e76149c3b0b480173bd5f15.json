{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState: {\n    userInfo: localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null,\n    errorUser: '',\n    errorRequest: '',\n    errorUpdate: '',\n    loadUpdate: false,\n    post: localStorage.getItem(\"post\") ? JSON.parse(localStorage.getItem(\"post\")) : null,\n    load: false,\n    error: ''\n  },\n  reducers: {\n    login: (state, action) => {\n      localStorage.setItem('userInfo', JSON.stringify(action.payload.userInfo));\n      return { ...state,\n        userInfo: action.payload.userInfo\n      };\n    },\n    postBlog: (state, action) => {\n      localStorage.setItem('post', JSON.stringify(action.payload.post));\n      return { ...state,\n        post: action.payload.post\n      };\n    },\n    errorSignin: (state, action) => ({ ...state,\n      errorUser: action.payload.errorUser\n    }),\n    registerError: (state, action) => ({ ...state,\n      errorRequest: action.payload.errorRequest\n    }),\n    updateLoad: (state, action) => ({ ...state,\n      loadUpdate: action.payload.loadUpdate\n    }),\n    updateErr: (state, action) => ({ ...state,\n      errorUpdate: action.payload.errorUpdate\n    }),\n    loadPost: (state, action) => ({ ...state,\n      load: action.payload.load\n    }),\n    errorPost: (state, action) => ({ ...state,\n      error: action.payload.error\n    })\n  }\n});\nexport const {\n  login,\n  errorSignin,\n  registerError,\n  updateLoad,\n  updateErr,\n  errorPost,\n  loadPost,\n  postBlog\n} = blogSlice.actions;\nexport default blogSlice.reducer;","map":{"version":3,"sources":["E:/blog/frontend/src/utils/store.js"],"names":["createSlice","blogSlice","name","initialState","userInfo","localStorage","getItem","JSON","parse","errorUser","errorRequest","errorUpdate","loadUpdate","post","load","error","reducers","login","state","action","setItem","stringify","payload","postBlog","errorSignin","registerError","updateLoad","updateErr","loadPost","errorPost","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\nconst blogSlice = createSlice({\r\n    name:'blog',\r\n    initialState:{\r\nuserInfo:localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null,\r\nerrorUser:'',\r\nerrorRequest:'',\r\nerrorUpdate:'',\r\nloadUpdate:false,\r\npost:localStorage.getItem(\"post\")?JSON.parse(localStorage.getItem(\"post\")):null,\r\nload:false,\r\nerror:''\r\n    },\r\n    reducers:{\r\n    login:(state,action) =>{\r\n        localStorage.setItem('userInfo',JSON.stringify(action.payload.userInfo))\r\n        return {...state,userInfo:action.payload.userInfo}\r\n    },\r\n    postBlog:(state,action) =>{\r\n        localStorage.setItem('post',JSON.stringify(action.payload.post))\r\n        return {...state,post:action.payload.post}\r\n    },\r\n    errorSignin:(state,action)=>({...state,errorUser:action.payload.errorUser}),\r\n    registerError:(state,action)=>({...state,errorRequest:action.payload.errorRequest}),\r\n   updateLoad:(state,action) =>({...state,loadUpdate:action.payload.loadUpdate}),\r\nupdateErr:(state,action) =>({...state,errorUpdate:action.payload.errorUpdate}),\r\nloadPost:(state,action) =>({...state,load:action.payload.load}),\r\nerrorPost:(state,action) =>({...state,error:action.payload.error}),\r\n\r\n    }\r\n})\r\nexport const {login,errorSignin,registerError,updateLoad,updateErr,errorPost,loadPost,postBlog} = blogSlice.actions\r\nexport default blogSlice.reducer"]},"metadata":{},"sourceType":"module"}