{"ast":null,"code":"var _jsxFileName = \"E:\\\\blog\\\\frontend\\\\src\\\\pages\\\\searchScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/sidebar/sidebar\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listPosts } from \"./actions/postactions\";\nimport Post from \"../components/posts/post\";\nimport { BlogContainer } from \"../components/sidebar/styles/sidebarstyle\";\nimport { PostC, Pages, Page, PageS } from \"../components/posts/styles/poststyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchScreen = () => {\n  _s();\n\n  const {\n    pageNumber = 1,\n    title = \"all\",\n    description = \"all\",\n    category = \"all\",\n    user = \"all\"\n  } = useParams();\n  const dispatch = useDispatch();\n  const result = useSelector(state => state.blog.result);\n  const pages = useSelector(state => state.blog.pages);\n  const page = useSelector(state => state.blog.page);\n  useEffect(() => {\n    dispatch(listPosts({\n      pageNumber: pageNumber,\n      title: title !== \"all\" ? title : \"\",\n      description: description !== \"all\" ? description : \"\",\n      category: category !== \"all\" ? category : \"\",\n      user: user !== \"all\" ? user : \"\"\n    }));\n  }, [title, category, description, user]);\n\n  const getFilterUrl = filter => {\n    const filterPage = filter.page;\n    const filterTitle = filter.title || title;\n    const filterCate = filter.category || category;\n    const filterUser = filter.user || user;\n    const filterDesc = filter.description || description;\n    return `/search/title/${filterTitle}/description/${filterDesc}/category/${filterCate}/user/${filterUser}/pageNumber/${filterPage}`;\n  };\n\n  console.log(result);\n  return /*#__PURE__*/_jsxDEV(BlogContainer, {\n    children: [/*#__PURE__*/_jsxDEV(PageS, {\n      children: [/*#__PURE__*/_jsxDEV(PostC, {\n        two: true,\n        children: result.map(item => /*#__PURE__*/_jsxDEV(Post, {\n          two: true,\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 4\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Pages, {\n        children: [...Array(pages).keys()].map(page => /*#__PURE__*/_jsxDEV(Page, {\n          onClick: () => getFilterUrl({\n            page: page + 1\n          }),\n          active: page === page + 1,\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchScreen, \"wcnnjcur0iFNhe5YbRZU7dBHkTA=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = SearchScreen;\nexport default SearchScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchScreen\");","map":{"version":3,"sources":["E:/blog/frontend/src/pages/searchScreen.js"],"names":["React","useState","useEffect","Sidebar","Navigate","useParams","useSelector","useDispatch","listPosts","Post","BlogContainer","PostC","Pages","Page","PageS","SearchScreen","pageNumber","title","description","category","user","dispatch","result","state","blog","pages","page","getFilterUrl","filter","filterPage","filterTitle","filterCate","filterUser","filterDesc","console","log","map","item","Array","keys"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport Sidebar from \"../components/sidebar/sidebar\"\r\nimport { Navigate, useParams } from \"react-router-dom\"\r\nimport { useSelector,useDispatch } from \"react-redux\"\r\nimport { listPosts } from \"./actions/postactions\"\r\nimport Post from \"../components/posts/post\"\r\nimport { BlogContainer } from \"../components/sidebar/styles/sidebarstyle\"\r\nimport { PostC ,Pages, Page,PageS} from \"../components/posts/styles/poststyle\"\r\nconst SearchScreen = () =>{\r\n    const {pageNumber = 1,title = \"all\",description = \"all\",category= \"all\",user= \"all\"} = useParams()\r\n    const dispatch = useDispatch()\r\n    const result = useSelector(state=>state.blog.result)\r\n    const pages = useSelector(state=>state.blog.pages)\r\n    const page = useSelector(state=>state.blog.page)\r\n    useEffect(()=>{\r\ndispatch(listPosts({\r\n    pageNumber:pageNumber,\r\n    title:title !== \"all\" ?title:\"\",\r\n    description:description !== \"all\"?description:\"\",\r\n    category:category !== \"all\"?category:\"\",\r\n    user:user !== \"all\"?user:\"\"\r\n}))\r\n    },[title,category,description,user])\r\n    const getFilterUrl = (filter) =>{\r\n        const filterPage = filter.page\r\n        const filterTitle = filter.title || title\r\n        const filterCate = filter.category || category\r\n        const filterUser = filter.user || user\r\n        const filterDesc = filter.description || description\r\n        return `/search/title/${filterTitle}/description/${filterDesc}/category/${filterCate}/user/${filterUser}/pageNumber/${filterPage}`\r\n    }\r\n    console.log(result)\r\n    return(\r\n        <BlogContainer>\r\n            <PageS>\r\n<PostC two>\r\n    {result.map(item=>(\r\n   <Post two item = {item} />\r\n    ))}\r\n    </PostC>\r\n\r\n<Pages>\r\n{[...Array(pages).keys()].map(page=>(<Page onClick = {()=>getFilterUrl({page:page+1})} active = {page === page + 1}>{page}</Page>))}\r\n</Pages>\r\n</PageS>\r\n<Sidebar />\r\n    </BlogContainer>\r\n    )\r\n}\r\nexport default SearchScreen"]},"metadata":{},"sourceType":"module"}