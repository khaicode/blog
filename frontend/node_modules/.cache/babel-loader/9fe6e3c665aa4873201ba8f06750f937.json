{"ast":null,"code":"var _jsxFileName = \"E:\\\\blog\\\\frontend\\\\src\\\\pages\\\\data\\\\cate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Select, Option } from \"../styles/postStyle\";\nimport { Checked } from \"../styles/blogg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cate = _ref => {\n  _s();\n\n  let {\n    cat,\n    choose,\n    categories,\n    cats\n  } = _ref;\n  const [cated, setCated] = useState(false);\n  let clicked = false;\n\n  const addCate = () => {\n    clicked = true;\n    if (cated) clicked = false;\n    const index = categories.findIndex(x => x === cat);\n\n    if (clicked) {\n      categories.splice(index, 0, cat);\n      setCated(true);\n    } else {\n      categories.splice(index, 1);\n      setCated(false);\n    }\n\n    cats = categories;\n    console.log(clicked);\n    console.log(categories);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: choose && /*#__PURE__*/_jsxDEV(Select, {\n      clicked: cated,\n      onClick: addCate,\n      children: /*#__PURE__*/_jsxDEV(Option, {\n        children: [cat.charAt(0).toUpperCase() + cat.slice(1), \" \", cated ? /*#__PURE__*/_jsxDEV(Checked, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 68\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Cate, \"B2ve2sa1BOX5ahRVU+P/gKxOejI=\");\n\n_c = Cate;\nexport default Cate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cate\");","map":{"version":3,"sources":["E:/blog/frontend/src/pages/data/cate.js"],"names":["React","useState","Select","Option","Checked","Cate","cat","choose","categories","cats","cated","setCated","clicked","addCate","index","findIndex","x","splice","console","log","charAt","toUpperCase","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,MAAR,EAAeC,MAAf,QAA4B,qBAA5B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;;AACC,MAAMC,IAAI,GAAG,QAAiC;AAAA;;AAAA,MAAhC;AAACC,IAAAA,GAAD;AAAKC,IAAAA,MAAL;AAAYC,IAAAA,UAAZ;AAAuBC,IAAAA;AAAvB,GAAgC;AAC1C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,KAAD,CAAjC;AACD,MAAIW,OAAO,GAAG,KAAd;;AACA,QAAMC,OAAO,GAAG,MAAK;AACzBD,IAAAA,OAAO,GAAG,IAAV;AACA,QAAGF,KAAH,EAAWE,OAAO,GAAG,KAAV;AACX,UAAME,KAAK,GAAGN,UAAU,CAACO,SAAX,CAAqBC,CAAC,IAAEA,CAAC,KAAKV,GAA9B,CAAd;;AACA,QAAGM,OAAH,EAAW;AACPJ,MAAAA,UAAU,CAACS,MAAX,CAAkBH,KAAlB,EAAwB,CAAxB,EAA0BR,GAA1B;AACJK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACK,KAHL,MAII;AACAH,MAAAA,UAAU,CAACS,MAAX,CAAkBH,KAAlB,EAAwB,CAAxB;AACJH,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACC;;AACDF,IAAAA,IAAI,GAAID,UAAR;AACGU,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AACF,GAfG;;AAgBA,sBAAO;AAAA,cACVD,MAAM,iBAAG,QAAC,MAAD;AAAS,MAAA,OAAO,EAAIG,KAApB;AAA4B,MAAA,OAAO,EAAIG,OAAvC;AAAA,6BACN,QAAC,MAAD;AAAA,mBAASP,GAAG,CAACc,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8Bf,GAAG,CAACgB,KAAJ,CAAU,CAAV,CAAvC,OAAsDZ,KAAK,gBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAJ,GAAgB,IAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA;AADC,mBAAP;AAMH,CAzBA;;GAAML,I;;KAAAA,I;AA0BP,eAAeA,IAAf","sourcesContent":["import React,{useState} from \"react\"\r\nimport {Select,Option} from \"../styles/postStyle\"\r\nimport { Checked } from \"../styles/blogg\"\r\n const Cate = ({cat,choose,categories,cats}) =>{\r\n     const [cated,setCated] = useState(false)\r\n    let clicked = false\r\n    const addCate = () =>{\r\nclicked = true \r\nif(cated)  clicked = false\r\nconst index = categories.findIndex(x=>x === cat )\r\nif(clicked){\r\n    categories.splice(index,0,cat)\r\nsetCated(true)\r\n    }\r\nelse{\r\n    categories.splice(index,1)\r\nsetCated(false)\r\n}\r\ncats =  categories\r\n   console.log(clicked)\r\n   console.log(categories)\r\n}\r\n    return(<>\r\n{choose &&<Select  clicked = {cated}  onClick = {addCate}>\r\n    <Option>{cat.charAt(0).toUpperCase() + cat.slice(1)} {cated   ?<Checked />:null}</Option>\r\n</Select>}\r\n</>\r\n    )\r\n}\r\nexport default Cate"]},"metadata":{},"sourceType":"module"}