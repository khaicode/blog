{"ast":null,"code":"var _jsxFileName = \"E:\\\\blog\\\\frontend\\\\src\\\\pages\\\\searchScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/sidebar/sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { listPosts } from \"./actions/postactions\";\nimport Post from \"../components/posts/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchScreen = () => {\n  _s();\n\n  const {\n    title = \"all\",\n    description = \"all\",\n    category = \"all\",\n    user = \"all\"\n  } = useParams();\n  const dispatch = useDispatch();\n  const result = useSelector(state => state.blog.result);\n  useEffect(() => {\n    dispatch(listPosts({\n      title: title !== \"all\" ? title : \"\",\n      description: description !== \"\" ? description : \"\",\n      category: category !== \"\" ? category : \"\",\n      user: user !== \"\" ? user : \"\"\n    }));\n  }, [title]);\n\n  const getFilterUrl = filter => {\n    const filterTitle = filter.title || title;\n    const filterCate = filter.category || category;\n    const filterUser = filter.user || user;\n    const filterDesc = filter.description || description;\n    return `/search/title/${filterTitle}/description/${filterDesc}/category/${filterCate}/user/${filterUser}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hsajj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), result.map(item => /*#__PURE__*/_jsxDEV(Post, {\n      item: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n};\n\n_s(SearchScreen, \"+Ld76TYW8/uUOPXvQUMWx2rZtvE=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = SearchScreen;\nexport default SearchScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchScreen\");","map":{"version":3,"sources":["E:/blog/frontend/src/pages/searchScreen.js"],"names":["React","useState","useEffect","Sidebar","useParams","useSelector","useDispatch","listPosts","Post","SearchScreen","title","description","category","user","dispatch","result","state","blog","getFilterUrl","filter","filterTitle","filterCate","filterUser","filterDesc","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;;AACA,MAAMC,YAAY,GAAG,MAAK;AAAA;;AACtB,QAAM;AAACC,IAAAA,KAAK,GAAG,KAAT;AAAeC,IAAAA,WAAW,GAAG,KAA7B;AAAmCC,IAAAA,QAAQ,GAAE,KAA7C;AAAmDC,IAAAA,IAAI,GAAE;AAAzD,MAAkET,SAAS,EAAjF;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,IAAN,CAAWF,MAAnB,CAA1B;AACAb,EAAAA,SAAS,CAAC,MAAI;AAClBY,IAAAA,QAAQ,CAACP,SAAS,CAAC;AACfG,MAAAA,KAAK,EAACA,KAAK,KAAK,KAAV,GAAiBA,KAAjB,GAAuB,EADd;AAEfC,MAAAA,WAAW,EAACA,WAAW,KAAK,EAAhB,GAAmBA,WAAnB,GAA+B,EAF5B;AAGfC,MAAAA,QAAQ,EAACA,QAAQ,KAAK,EAAb,GAAgBA,QAAhB,GAAyB,EAHnB;AAIfC,MAAAA,IAAI,EAACA,IAAI,KAAK,EAAT,GAAYA,IAAZ,GAAiB;AAJP,KAAD,CAAV,CAAR;AAMK,GAPQ,EAOP,CAACH,KAAD,CAPO,CAAT;;AAQA,QAAMQ,YAAY,GAAIC,MAAD,IAAW;AAC5B,UAAMC,WAAW,GAAGD,MAAM,CAACT,KAAP,IAAgBA,KAApC;AACA,UAAMW,UAAU,GAAGF,MAAM,CAACP,QAAP,IAAmBA,QAAtC;AACA,UAAMU,UAAU,GAAGH,MAAM,CAACN,IAAP,IAAeA,IAAlC;AACA,UAAMU,UAAU,GAAGJ,MAAM,CAACR,WAAP,IAAsBA,WAAzC;AACA,WAAQ,iBAAgBS,WAAY,gBAAeG,UAAW,aAAYF,UAAW,SAAQC,UAAW,EAAxG;AACH,GAND;;AAOA,sBACJ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAECP,MAAM,CAACS,GAAP,CAAWC,IAAI,iBACb,QAAC,IAAD;AAAM,MAAA,IAAI,EAAIA;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAQH,CA3BD;;GAAMhB,Y;UACsEL,S,EACvDE,W,EACFD,W;;;KAHbI,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport Sidebar from \"../components/sidebar/sidebar\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useSelector,useDispatch } from \"react-redux\"\r\nimport { listPosts } from \"./actions/postactions\"\r\nimport Post from \"../components/posts/post\"\r\nconst SearchScreen = () =>{\r\n    const {title = \"all\",description = \"all\",category= \"all\",user= \"all\"} = useParams()\r\n    const dispatch = useDispatch()\r\n    const result = useSelector(state=>state.blog.result)\r\n    useEffect(()=>{\r\ndispatch(listPosts({\r\n    title:title !== \"all\" ?title:\"\",\r\n    description:description !== \"\"?description:\"\",\r\n    category:category !== \"\"?category:\"\",\r\n    user:user !== \"\"?user:\"\"\r\n}))\r\n    },[title])\r\n    const getFilterUrl = (filter) =>{\r\n        const filterTitle = filter.title || title\r\n        const filterCate = filter.category || category\r\n        const filterUser = filter.user || user\r\n        const filterDesc = filter.description || description\r\n        return `/search/title/${filterTitle}/description/${filterDesc}/category/${filterCate}/user/${filterUser}`\r\n    }\r\n    return(\r\n<div>\r\n    <h1>hsajj</h1>\r\n{result.map(item=>(\r\n   <Post item = {item} />\r\n    ))}\r\n</div>\r\n    )\r\n}\r\nexport default SearchScreen"]},"metadata":{},"sourceType":"module"}